{"version":3,"sources":["components/Grid.js","components/Info.js","App.js","serviceWorker.js","index.js"],"names":["Grid","props","handleSpace","space","setState","spacing","handleJustify","justify","handlealignItems","alignItems","handlealignContent","alignContent","state","size","bp","window","screen","width","this","addEventListener","Paper","style","padding","Typography","textAlign","am-grid","Button","onClick","variant","margin","height","align-content","align-items","lg","lineHeight","md","xm","xs","Component","Info","className","App","info","grid","handleClick","menu","menu2","paddingBottom","color","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.33ab1762.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass Grid extends Component {\r\n    constructor (props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            spacing: 1,\r\n            justify: 'center',\r\n            alignItems: 'center',\r\n            alignContent: 'center',\r\n            size: 2,\r\n            bp: 'lg',\r\n        }\r\n    }\r\n\r\n    handleSpace = (space) => {\r\n        this.setState({\r\n            spacing: space\r\n        })\r\n    }\r\n\r\n    handleJustify = (justify) => {\r\n        this.setState({\r\n            justify: justify\r\n        })\r\n    }\r\n\r\n    handlealignItems = (alignItems) => {\r\n        this.setState({\r\n            alignItems: alignItems\r\n        })\r\n    }\r\n\r\n    handlealignContent = (alignContent) => {\r\n        this.setState({\r\n            alignContent: alignContent\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (window.screen.width <= 767) {\r\n            this.setState({\r\n                size: 12,\r\n                bp: 'xs'\r\n            })\r\n        }\r\n        if (window.screen.width > 767) {\r\n            this.setState({\r\n                size: 7,\r\n                bp: 'xm'\r\n            })\r\n        }\r\n        if (window.screen.width > 991) {\r\n            this.setState({\r\n                size: 6,\r\n                bp: 'md'\r\n            })\r\n        }\r\n\r\n        if (window.screen.width > 1199) {\r\n            this.setState({\r\n                size: 2,\r\n                bp: 'lg'\r\n            })\r\n        }\r\n        window.addEventListener('resize', () => {\r\n            if (window.screen.width > 1199) {\r\n                this.setState({\r\n                    size: 2,\r\n                    bp: 'lg'\r\n                })\r\n                return\r\n            }\r\n            if (window.screen.width > 991) {\r\n                this.setState({\r\n                    size: 6,\r\n                    bp: 'md'\r\n                })\r\n                return\r\n            }\r\n            if (window.screen.width > 767) {\r\n                this.setState({\r\n                    size: 7,\r\n                    bp: 'xm'\r\n                })\r\n                return\r\n            }\r\n            if (window.screen.width <= 767) {\r\n                this.setState({\r\n                    size: 12,\r\n                    bp: 'xs'\r\n                })\r\n                return\r\n            }\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Paper style={{padding:`10px`}}>\r\n                <Typography>\r\n                    Модуль GRID\r\n                </Typography>\r\n                <Typography>\r\n                    Данный модуль устанавливается по атрибриту <b>am-grid</b><br/>\r\n                    Может содержать два значения(обязательны) <b>item</b> и/или <b>container</b><br/>\r\n                    <b>container</b> Имеет следующие дополнительные (необзательные) аттрибуты\r\n                </Typography>\r\n\r\n                <Typography style={{textAlign: 'center'}}>\r\n                    [spacing='{this.state.spacing}']\r\n                </Typography>\r\n                <div am-grid=\"container\" justify=\"center\" style={{padding:`10px`}}>\r\n                    <Button onClick={() => this.handleSpace(1)} variant={'contained'} style={{margin:`5px`}}>1</Button>\r\n                    <Button onClick={() => this.handleSpace(2)} variant={'contained'} style={{margin:`5px`}}>2</Button>\r\n                    <Button onClick={() => this.handleSpace(3)} variant={'contained'} style={{margin:`5px`}}>3</Button>\r\n                </div>\r\n\r\n                <Typography style={{textAlign: 'center'}}>\r\n                    [justify='{this.state.justify}']\r\n                </Typography>\r\n                <div am-grid=\"container\" justify=\"center\" style={{padding:`10px`}}>\r\n                    <Button onClick={() => this.handleJustify('space-between')} variant={'contained'} style={{margin:`5px`}}>space-between</Button>\r\n                    <Button onClick={() => this.handleJustify('space-around')} variant={'contained'} style={{margin:`5px`}}>space-around</Button>\r\n                    <Button onClick={() => this.handleJustify('space-evenly')} variant={'contained'} style={{margin:`5px`}}>space-evenly</Button>\r\n                    <Button onClick={() => this.handleJustify('flex-start')} variant={'contained'} style={{margin:`5px`}}>flex-start</Button>\r\n                    <Button onClick={() => this.handleJustify('flex-end')} variant={'contained'} style={{margin:`5px`}}>flex-end</Button>\r\n                    <Button onClick={() => this.handleJustify('center')} variant={'contained'} style={{margin:`5px`}}>center</Button>\r\n                </div>\r\n\r\n                <Typography style={{textAlign: 'center'}}>\r\n                    [align-items='{this.state.alignItems}']\r\n                </Typography>\r\n                <div am-grid=\"container\" justify=\"center\" style={{padding:`10px`}}>\r\n                    <Button onClick={() => this.handlealignItems('flex-start')} variant={'contained'} style={{margin:`5px`}}>flex-start</Button>\r\n                    <Button onClick={() => this.handlealignItems('center')} variant={'contained'} style={{margin:`5px`}}>center</Button>\r\n                    <Button onClick={() => this.handlealignItems('flex-end')} variant={'contained'} style={{margin:`5px`}}>flex-end</Button>\r\n                    <Button onClick={() => this.handlealignItems('stretch')} variant={'contained'} style={{margin:`5px`}}>stretch</Button>\r\n                    <Button onClick={() => this.handlealignItems('baseline')} variant={'contained'} style={{margin:`5px`}}>baseline</Button>\r\n                </div>\r\n\r\n                <Typography style={{textAlign: 'center'}}>\r\n                    [align-content='{this.state.alignContent}']\r\n                </Typography>\r\n                <div am-grid=\"container\" justify=\"center\" style={{padding:`10px`}}>\r\n                    <Button onClick={() => this.handlealignContent('flex-start')} variant={'contained'} style={{margin:`5px`}}>flex-start</Button>\r\n                    <Button onClick={() => this.handlealignContent('center')} variant={'contained'} style={{margin:`5px`}}>center</Button>\r\n                    <Button onClick={() => this.handlealignContent('flex-end')} variant={'contained'} style={{margin:`5px`}}>flex-end</Button>\r\n                    <Button onClick={() => this.handlealignContent('space-between')} variant={'contained'} style={{margin:`5px`}}>space-between</Button>\r\n                    <Button onClick={() => this.handlealignContent('space-around')} variant={'contained'} style={{margin:`5px`}}>space-around</Button>\r\n                </div>\r\n\r\n                <div am-grid=\"container\"\r\n                     style={{height:`200px`}}\r\n                     align-content={this.state.alignContent}\r\n                     align-items={this.state.alignItems}\r\n                     spacing={this.state.spacing}\r\n                     justify={this.state.justify}\r\n                >\r\n                    <div am-grid=\"item\" lg=\"12\">\r\n                        <div>[lg=\"12\"]</div>\r\n                    </div>\r\n                    <div am-grid=\"item\" lg=\"3\">\r\n                        <div>[lg=\"3\"]</div>\r\n                    </div>\r\n                    <div am-grid=\"item\" lg=\"3\">\r\n                        <div>[lg=\"3\"]</div>\r\n                    </div>\r\n                    <div am-grid=\"item\" lg=\"3\">\r\n                        <div style={{height:`40px`,lineHeight:`40px`}}>[lg=\"3\"]</div>\r\n                    </div>\r\n                    <div am-grid=\"item\" lg=\"2\">\r\n                        <div>[lg=\"2\"]</div>\r\n                    </div>\r\n                    <div am-grid=\"item\" lg=\"3\" >\r\n                        <div style={{height:`40px`,lineHeight:`40px`}}>[lg=\"3\"]</div>\r\n                    </div>\r\n                    <div am-grid=\"item\" lg=\"2\">\r\n                        <div style={{height:`30px`,lineHeight:`30px`}}>[lg=\"2\"]</div>\r\n                    </div>\r\n                    <div am-grid=\"item\" lg=\"1\">\r\n                        <div>[lg=\"1\"]</div>\r\n                    </div>\r\n                    <div am-grid=\"item\" lg=\"3\">\r\n                        <div>[lg=\"3\"]</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Typography>\r\n                    <b>item</b> Имеет следующие дополнительные (необзательные) аттрибуты<br/>\r\n                    [lg='1 to 12']<br/>\r\n                    [md='1 to 12']<br/>\r\n                    [xm='1 to 12']<br/>\r\n                    [xs='1 to 12']<br/><br/>\r\n                </Typography>\r\n\r\n                <div am-grid=\"container\"\r\n                     justify='flex-start'\r\n                     align-content=\"flex-start\"\r\n                     spacing=\"1\"\r\n                >\r\n                    <div am-grid=\"item\"\r\n                         lg=\"2\"\r\n                         md=\"6\"\r\n                         xm=\"7\"\r\n                         xs=\"12\"\r\n                    >\r\n                        <div>\r\n                            [{this.state.bp}=\"{this.state.size}\"]\r\n                        </div>\r\n                    </div>\r\n                    <div am-grid=\"item\"\r\n                         lg=\"2\"\r\n                         md=\"6\"\r\n                         xm=\"7\"\r\n                         xs=\"12\"\r\n                    >\r\n                        <div>\r\n                            [{this.state.bp}=\"{this.state.size}\"]\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Grid;\r\n","import React,{Component} from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass Info extends Component {\r\n    render () {\r\n        return (\r\n            <Paper>\r\n                <div className=\"container\">\r\n                    <Typography>\r\n                        Attribute Modules (AM) - это метод использования атрибутов HTML и их значений, а не классов для элементов стиля. При этом каждый атрибут эффективно объявляет отдельное пространство имен для инкапсуляции информации о стиле, что приводит к более удобочитаемому и поддерживаемому HTML & CSS.\r\n                    </Typography>\r\n                    <Typography>\r\n                        <br/>Пример на кнопках<br/><br/>\r\n                    </Typography>\r\n                    <Typography>\r\n                        <b>// Большая основная кнопка</b> <br/>\r\n                        {'<a class=\"btn btn-primary btn-lg\">Large primary button</a>'}<br/>\r\n                        {'<a am-button=\"primary large\">Large primary button</a>'}<br/><br/>\r\n\r\n                        <b>// Кнопка по умолчанию </b><br/>\r\n                        {'<a class=\"btn btn-default\">Default button</a>'}<br/>\r\n                        {'<a am-button>Default button</a>'}<br/><br/>\r\n\r\n                        <b>// Маленькая кнопка информации </b><br/>\r\n                        {'<a class=\"btn btn-info btn-sm\">Small info button</a>'}<br/>\r\n                        {'<a am-button=\"info small\">Small info button</a>'}<br/><br/>\r\n\r\n                        <b>// Маленькая кнопка опасности </b><br/>\r\n                        {'<a class=\"btn btn-danger btn-xs\">small danger button</a>'}<br/>\r\n                        {'<a am-button=\"danger small\">small danger button</a>'}<br/>\r\n                    </Typography>\r\n                </div>\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Info;\r\n","import React,{Component} from 'react';\nimport Grid from './components/Grid'\nimport Info from './components/Info'\nimport Button from '@material-ui/core/Button';\n\nclass App extends Component {\n    state = {\n        info: true,\n        grid: false\n    }\n\n    handleClick = (menu, menu2) => {\n        this.setState({\n            info: menu,\n            grid: menu2\n        })\n    }\n\n    render () {\n        return (\n            <div className=\"container\">\n                <div am-grid=\"container\" justify=\"space-evenly\" style={{paddingBottom:`20px`}}>\n                    <Button\n                        onClick={() => this.handleClick(true, false)}\n                        variant={'contained'}\n                        color={this.state.info ? 'primary' : 'default'}\n                    >Общая информация</Button>\n                    <Button\n                        onClick={() => this.handleClick(false, true)}\n                        variant={'contained'}\n                        color={this.state.grid ? 'primary' : 'default'}\n                    >Модуль am-grid</Button>\n                </div>\n                {\n                    this.state.info &&\n                    <Info />\n                }\n                {\n                    this.state.grid &&\n                    <Grid />\n                }\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}